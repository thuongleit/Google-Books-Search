apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'me.thuongle.googlebookssearch.testing.OpenClass'
}

android {
    def networkExecutorType = "me.thuongle.googlebookssearch.api.BookService.NetworkExecutorType.RETROFIT"

    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "me.thuongle.googlebookssearch"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "me.thuongle.googlebookssearch.api.BookService.NetworkExecutorType", "NETWORK_EXECUTOR_TYPE", networkExecutorType
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    //layout and views
    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${versions.supportLibrary}"
    implementation "com.android.support:cardview-v7:${versions.supportLibrary}"
    implementation "com.android.support:design:${versions.supportLibrary}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //ACCs
    implementation "android.arch.lifecycle:extensions:${versions.lifecycle}"
    kapt "android.arch.lifecycle:compiler:${versions.lifecycle}"

    //network and logging
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation 'com.google.code.gson:gson:2.8.5'

    //image tools
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    //debug tools
    implementation 'com.jakewharton.timber:timber:4.5.1'

    testImplementation 'junit:junit:4.12'
    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"
    testImplementation "org.mockito:mockito-core:2.22.0"

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
}
// we need all open to run tests in debug variant. UT in release variant will always fail
// disable check UT in release
project.tasks.whenTaskAdded {
    if (it.name == "compileReleaseUnitTestKotlin") {
        it.enabled = false
    }
}
